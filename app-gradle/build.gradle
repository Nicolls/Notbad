import java.security.AccessControlContext

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}
android {
    namespace 'com.notbad.gradle'
    compileSdk COMPILE_VERSION as int

    defaultConfig {
        minSdk MIN_VERSION as int
        targetSdk TARGET_VERSION as int
        applicationId "com.notbad.gradle"
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    // Java language implementation
    implementation "androidx.activity:activity:$ACTIVITY_VERSION"
    // Kotlin
    implementation "androidx.activity:activity-ktx:$ACTIVITY_VERSION"
    implementation "androidx.appcompat:appcompat:${APP_COMPACT_VERSION}"
    implementation "androidx.core:core-ktx:${KTX_CORE_VERSION}"
    implementation "androidx.constraintlayout:constraintlayout:${CONSTRAINT_LAYOUT_VERSION}"
    implementation "com.google.android.material:material:${MATERIAL_VERSION}"
    implementation project(":lib-common")
}

kapt {
    correctErrorTypes true
}

class Person{
    String personName="lisi"
    int personAge=18
    String subPersonName="abc"
    def printPerson(){
        println("######name:${personName} age:${personAge}")
    }
    def printSubPerson(Closure closure){
        closure.delegate=this
        closure.setResolveStrategy(Closure.DELEGATE_FIRST)
        return closure
    }
    def ccc(String xy){
        personName = xy
        println("@@@@ ${personName} age:${personAge}")
    }
}
def person(Closure<Person> closure){
    Person person = new Person()
    closure.delegate = person
    closure.setResolveStrategy(Closure.DELEGATE_FIRST)
    return  closure
}
def hui=person {
    ccc "MMMMM"
    printSubPerson{
        println("DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD")
        personAge = 33
        printPerson()
    }
    printPerson()
}

task hhh{
    doLast {
        println("@@@@@@@@@@@@@@@@RRR")
        hui()
    }
}